<?php

/**
 * @file
 * Contains user_preferences.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function user_preferences_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the user_preferences module.
    case 'help.page.user_preferences':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('User preference by taxonomy') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function user_preferences_theme() {
  return [
    'user_preferences' => [
      'render element' => 'children',
    ],
    'activity_block' => [
      'variables' => [
        'list_activity' => NULL
      ],
      'template' => 'activity-block',
    ],
  ];
}

/**
 * Implements hook_form_alter().
 */
function user_preferences_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $values_active = [];
  $value_for_config = [];
  $forms = [
    'user_form'
  ];

  if (in_array($form_id, $forms)) {

    $values_tax = $form['field_preferencias']['widget']['#options'];
    $serviceUtilities = \Drupal::service('user_preferences.utilities');
    $value_config = $serviceUtilities->getActivePreference();
    
    foreach ($value_config as $key => $data) {
      if (!empty($data['childrens'])) {
        //Armar al padre
        foreach ($values_tax as $id => $obj) {
          if ($id == reset($data['term'])) {
            $values_active[$id] = $obj;
          } else {
            // Armar el listado de hijos
            foreach ($data['childrens'] as $k => $objChild) {
              //kint($objChild['idTerm']);
              if ($id == $objChild['idTerm']) {
                $values_active[$id] = $obj;
              }
            }
          }
        }
      }
    }
    $form['field_preferencias']['widget']['#options']= $values_active;

  }
}

/**
 * Implements hook_views_query_alter().
 */
function user_preferences_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() === 'que_hacer_en_destino' ) {
    $serviceUtilities = \Drupal::service('user_preferences.utilities');
    $uid = $this->currentUser->id();
    $destiny = '';
    $limit = 10;
    $route_match = \Drupal::service('current_route_match');

    if ($route_match->getRouteName() == 'entity.node.canonical') {
      $node = $route_match->getParameter('node');
      
      if ($node) {
        $destiny = $node->get('field_termino_destino');
      }
    } 
    
    $resultados =  $this->utilitiesServices->getActivityXUserXDestinyXlimit($uid, $destiny, $limit);
    $first = array_shift($resultados);

    if ($view->current_display === 'block_2' ) {
     
     $query->addWhere('', 'node_field_data.nid', $first, '=');
    } elseif($view->current_display === 'block_1'){
      $query->addWhere('', 'node_field_data.nid', $resultados, 'IN');
    }
  }
}
